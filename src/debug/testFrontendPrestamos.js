/**
 * üß™ SCRIPT DE VERIFICACI√ìN: Frontend de Pr√©stamos
 * 
 * Lista de validaciones a realizar en el navegador
 */

console.log(`
üß™ VERIFICACIONES PARA EL FRONTEND DE PR√âSTAMOS
======================================================

üìã CHECKLIST DE PRUEBAS:

1. ‚úÖ MODAL DE PR√âSTAMO:
   - [ ] Se abre correctamente al hacer clic en "Nuevo Pr√©stamo"
   - [ ] Todos los campos permiten escribir texto
   - [ ] Los selects muestran las opciones correctas
   - [ ] Los campos num√©ricos aceptan n√∫meros
   - [ ] Los textarea permiten texto multil√≠nea

2. ‚úÖ VALIDACIONES:
   - [ ] Campos requeridos muestran error si est√°n vac√≠os
   - [ ] Montos solo aceptan n√∫meros positivos
   - [ ] Tasas de inter√©s est√°n entre 0 y 100
   - [ ] Errores se limpian al escribir

3. ‚úÖ ENV√çO DE DATOS:
   - [ ] Al enviar formulario se transforman los datos correctamente
   - [ ] Se env√≠an al endpoint /api/prestamos
   - [ ] Se registra autom√°ticamente en movimientos de caja
   - [ ] Se muestra mensaje de √©xito

4. ‚úÖ INTEGRACI√ìN BACKEND:
   - [ ] Los pr√©stamos aparecen en la lista
   - [ ] Se genera movimiento en caja autom√°ticamente
   - [ ] Los datos se almacenan correctamente

üìù DATOS DE PRUEBA RECOMENDADOS:
------------------------------
Entidad Financiera:
- Nombre: "Banco de Cr√©dito del Per√∫"
- C√≥digo: "BCP"
- Tipo: "banco"

Pr√©stamo:
- Tipo: "personal"
- Monto: 10000
- Tasa: 15.5%
- Plazo: 12 meses

üîß SI HAY ERRORES:
------------------
1. Abrir DevTools (F12)
2. Revisar Console para errores JavaScript
3. Revisar Network para ver requests a la API
4. Verificar que los datos se env√≠an correctamente

üéØ VALIDACI√ìN FINAL:
--------------------
- [ ] Pr√©stamo se crea exitosamente
- [ ] Aparece en /api/movimientos-caja/movimientos con categor√≠a 'prestamo_recibido'
- [ ] Los montos coinciden
- [ ] No hay errores en console
`);

// Funci√≥n para debuggear el formulario
window.debugFormularioPrestamos = function() {
    console.log('üîç Estado actual del formulario:', {
        modal: document.querySelector('[data-testid="modal-prestamo"]'),
        campos: Array.from(document.querySelectorAll('input, select, textarea')).map(el => ({
            name: el.name,
            value: el.value,
            type: el.type,
            placeholder: el.placeholder
        }))
    });
};

// Funci√≥n para probar el env√≠o de datos
window.testEnvioPrestamo = function() {
    const datosTest = {
        entidadFinanciera: {
            nombre: "Banco de Prueba",
            codigo: "TEST",
            tipo: "banco"
        },
        tipoCredito: "personal",
        montoSolicitado: 5000,
        tasaInteres: {
            porcentaje: 15,
            tipo: "fija",
            periodo: "anual"
        },
        plazo: {
            cantidad: 12,
            unidad: "meses"
        },
        proposito: "Pr√©stamo de prueba",
        observaciones: "Datos de testing"
    };
    
    console.log('üì§ Enviando datos de prueba:', datosTest);
    
    // Simulamos el env√≠o a la API
    fetch('/api/prestamos', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(datosTest)
    })
    .then(response => response.json())
    .then(data => {
        console.log('‚úÖ Respuesta del servidor:', data);
    })
    .catch(error => {
        console.error('‚ùå Error en env√≠o:', error);
    });
};

console.log(`
üõ†Ô∏è FUNCIONES DE DEBUG DISPONIBLES:
- debugFormularioPrestamos() - Ver estado del formulario
- testEnvioPrestamo() - Probar env√≠o de datos

Ejecuta estas funciones en la consola del navegador.
`);
